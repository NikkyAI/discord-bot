name: docker build & push

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
    - name: Check Out Repo
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: cache directories
      uses: actions/cache@v2
      with:
        path: |
          ~/.gradle
          .gradle
          ~/.docker
        key: ${{ runner.os }}-gradle-cache-${{ github.ref }}-${{ hashFiles('**/build.gradle.kts', 'version.properties') }}

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1

    - name: Build and push
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        context: ./
        file: ./Dockerfile
        push: true
        tags: ${{ secrets.DOCKER_HUB_USERNAME }}/twitch-annoucement-discord-bot:latest

    - name: Image digest
      run: echo ${{ steps.docker_build.outputs.digest }}

    - name: Discord Workflow Status Notifier
      uses: nobrayner/discord-webhook@v1
      with:
        github-token: ${{ github.token }}
        discord-webhook: ${{ secrets.WEBHOOK_URL }}
      if: ${{ always }}
#    - name: Send Webhook Notification
#      if: always()
#      env:
#        JOB_STATUS: ${{ job.status }}
#        WEBHOOK_URL: ${{ secrets.WEBHOOK_URL }}
#        HOOK_OS_NAME: ${{ runner.os }}
#        WORKFLOW_NAME: ${{ github.workflow }}
#      run: |
#        git clone https://github.com/DiscordHooks/github-actions-discord-webhook.git webhook
#        bash webhook/send.sh $JOB_STATUS $WEBHOOK_URL
#      shell: bash
